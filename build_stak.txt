// generated by xmr-stak/2.10.2/1fa46267b/unknown/win/nvidia-amd-cpu/0

/*
 * GPU configuration. You should play around with threads and blocks as the fastest settings will vary.
 * index         - GPU index number usually starts from 0.
 * threads       - Number of GPU threads (nothing to do with CPU threads).
 * blocks        - Number of GPU blocks (nothing to do with CPU threads).
 * bfactor       - Enables running the Cryptonight kernel in smaller pieces.
 *                 Increase if you want to reduce GPU lag. Recommended setting on GUI systems - 8
 * bsleep        - Insert a delay of X microseconds between kernel launches.
 *                 Increase if you want to reduce GPU lag. Recommended setting on GUI systems - 100
 * affine_to_cpu - This will affine the thread to a CPU. This can make a GPU miner play along nicer with a CPU miner.
 * sync_mode     - method used to synchronize the device
 *                 documentation: http://docs.nvidia.com/cuda/cuda-runtime-api/group__CUDART__DEVICE.html#group__CUDART__DEVICE_1g69e73c7dda3fc05306ae7c811a690fac
 *                 0 = cudaDeviceScheduleAuto
 *                 1 = cudaDeviceScheduleSpin - create a high load on one cpu thread per gpu
 *                 2 = cudaDeviceScheduleYield
 *                 3 = cudaDeviceScheduleBlockingSync (default)
 * mem_mode      - select the memory access pattern (this option has only a meaning for cryptonight_v8 and monero)
 *                 0 = 64bit memory loads
 *                 1 = 256bit memory loads   
 *
 * On the first run the miner will look at your system and suggest a basic configuration that will work,
 * you can try to tweak it from there to get the best performance.
 *
 * A filled out configuration should look like this:
 * "gpu_threads_conf" :
 * [
 *     { "index" : 0, "threads" : 17, "blocks" : 60, "bfactor" : 0, "bsleep" :  0,
 *       "affine_to_cpu" : false, "sync_mode" : 3, "mem_mode" : 1
 *     },
 * ],
 * If you do not wish to mine with your nVidia GPU(s) then use:
 * "gpu_threads_conf" :
 * null,
 */

"gpu_threads_conf" :
[
  // gpu: Tesla M2050 architecture: 20
  //      memory: 2886/3020 MiB
  //      smx: 14
  { "index" : 0,
    "threads" : 54, "blocks" : 64,
    "bfactor" : 10, "bsleep" :  15,
    "affine_to_cpu" : false, "sync_mode" : 3,
    "mem_mode" : 1,
  },
  // gpu: GeForce GTX 580 architecture: 20
  //      memory: 1198/1536 MiB
  //      smx: 16
  { "index" : 1,
    "threads" : 64, "blocks" : 64,
    "bfactor" : 10, "bsleep" :  15,
    "affine_to_cpu" : false, "sync_mode" : 3,
    "mem_mode" : 1,
  },


CPU Backend
By default the CPU backend can be tuned in the config file cpu.txt

Choose Value for low_power_mode
The optimal value for low_power_mode depends on the cache size of your CPU, and the number of threads.

The low_power_mode can be set to a number between 1 to 5. When set to a value N greater than 1, this mode increases the single thread performance by N times, but also requires at least 2*N MB of cache per thread. It can also be set to false or true. The value false is equivalent to 1, and true is equivalent to 2.

This setting is particularly useful for CPUs with very large cache. For example the Intel Crystal Well Processors are equipped with 128MB L4 cache, enough to run 8 threads at an optimal low_power_mode value of 5.

],
